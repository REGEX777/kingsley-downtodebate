<%- include('./partials/top') -%>

<!-- HERO -->
<section style="background-image: url('<%= graphics.banner?.path %>'); background-color: rgba(0,0,0,0.5); background-blend-mode: multiply" class="bg-cover bg-center bg-blue-600 text-white min-h-[40vh] flex items-center justify-center">

  <div class="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center py-10 sm:py-14">
      <h1 class="font-heading font-bold text-3xl sm:text-4xl md:text-5xl lg:text-6xl mb-3">
        Join Us
      </h1>
      <p class="text-sm sm:text-base md:text-lg max-w-3xl mx-auto text-primary-100">
        Currently, DownToDebate is still trying to make a bigger impact on the debating community, and to do that, we need as many people as we can. We are currently recruiting volunteer coders, case writers, and debaters from different countries to expand the scope of our initiative. If you are interested in joining and giving back to the debating community, please fill in the form below and tell us how you can contribute to DownToDebate!
      </p>
    </div>
  </div>
</section>

<main class="py-12 bg-gray-50">
  <div class="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Contact form card -->
    <div class="w-full flex justify-center">
      <form
        action="/join-us"
        method="POST"
        class="w-full max-w-3xl bg-white rounded-lg shadow-sm border border-gray-200 p-6 sm:p-8"
        novalidate
        id="contactForm"
      >
        <% if (success.length > 0) { %>
            <div class="mb-4 rounded-md bg-green-50 border border-green-100 p-3 text-green-700 text-sm">
                <%= success[0] %>
            </div>
        <% } %>

        <% if (error.length > 0) { %>
            <div class="mb-4 rounded-md bg-red-50 border border-red-100 p-3 text-red-700 text-sm">
                <%= error[0] %>
            </div>
        <% } %>

        <h2 class="text-xl sm:text-2xl font-semibold text-gray-900 mb-1">Join Us</h2>
        <p class="text-sm text-gray-500 mb-6">Enter your email and a short message — we’ll get back to you.</p>
        <div class="grid grid-cols-1 gap-4">
          <!-- EMAIL -->
          <label class="block">
            <span class="text-sm font-medium text-gray-700">Email</span>
            <input
              type="email"
              name="email"
              id="email"
              required
              placeholder="you@example.com"
              class="mt-2 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
              aria-describedby="emailHelp"
            />
            <p id="emailHelp" class="mt-1 text-xs text-red-600 hidden" aria-live="polite"></p>
          </label>

          <!-- MESSAGE -->
          <label class="block">
            <span class="text-sm font-medium text-gray-700">Message</span>
            <textarea
              name="message"
              id="message"
              rows="4"
              required
              placeholder="Write your message here..."
              class="mt-2 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 resize-none focus:outline-none focus:ring-2 focus:ring-primary-600 focus:border-primary-600 overflow-auto whitespace-normal break-words"
            ></textarea>
            <p class="mt-1 text-xs text-gray-500">Max 1000 characters.</p>
          </label>

          <!-- submit -->
          <div class="flex items-center justify-between gap-4 pt-2">
            <button
              type="submit"
              class="inline-flex items-center justify-center rounded-md bg-primary-600 text-white px-4 py-2 text-sm font-medium shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-600"
              id="submitBtn"
            >
              Submit
            </button>
          </div>
        </div>
      </form>
    </div>

  </div>
</main>

<%- include('./partials/bottom') -%>

<script>
  (function () {
    const form = document.getElementById('contactForm');
    const email = document.getElementById('email');
    const message = document.getElementById('message');
    const emailHelp = document.getElementById('emailHelp');
    const submitBtn = document.getElementById('submitBtn');
    const MAX_CHARS = 1000;

    // auto-resize textarea
    const resize = el => {
      el.style.height = 'auto';
      el.style.height = (el.scrollHeight) + 'px';
    };
    message.addEventListener('input', (e) => {
      if (message.value.length > MAX_CHARS) {
        message.value = message.value.slice(0, MAX_CHARS);
      }
      resize(message);
    });
    requestAnimationFrame(()=>resize(message));

    function isValidEmail(v) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v);
    }

    form.addEventListener('submit', function (e) {
      let valid = true;
      emailHelp.textContent = '';
      emailHelp.classList.add('hidden');

      if (!isValidEmail(email.value.trim())) {
        e.preventDefault();
        valid = false;
        emailHelp.textContent = 'Please enter a valid email address.';
        emailHelp.classList.remove('hidden');
        email.focus();
      } else if (!message.value.trim()) {
        e.preventDefault();
        valid = false;
        message.focus();
      }

      if (!valid) {
        form.classList.remove('animate-shake');
        void form.offsetWidth;
        form.classList.add('animate-shake');
        setTimeout(() => form.classList.remove('animate-shake'), 600);
      } else {
        submitBtn.disabled = true;
        submitBtn.classList.add('opacity-70', 'cursor-not-allowed');
      }
    });

    const style = document.createElement('style');
    style.textContent = `
      @keyframes shake-x {
        0% { transform: translateX(0); }
        25% { transform: translateX(-6px); }
        50% { transform: translateX(6px); }
        75% { transform: translateX(-3px); }
        100% { transform: translateX(0); }
      }
      .animate-shake { animation: shake-x 0.6s ease; }
    `;
    document.head.appendChild(style);
  })();
</script>
